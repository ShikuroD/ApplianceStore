@model MvcClient.ViewModels.DashboardViewModel;
@{
    ViewData["Title"] = "Dashboard";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml"; 
    var XLabels = Newtonsoft.Json.JsonConvert.SerializeObject( Model.Data.Select( x => x.Month ).ToList() );  
    var YValues = Newtonsoft.Json.JsonConvert.SerializeObject( Model.Data.Select( x => x.Revenue ).ToList() );  
}
<h1> Dashboard</h1>
<div class="row">
    <div class="col-xl-6 col-lg-4 " style="margin: auto;">
            <div class="card h-full">
                <div class="card-body">
                    <div class="single-report mb-xs-30">
                        <div class="s-report-inner pr--20 pt--30 mb-3">
                            <div class="icon"><i class="fa fa-btc"></i></div>
                            <div class="s-report-title d-flex justify-content-between">
                                <h2 class="header-title mb-0">Total Revenue</h2>
                            </div>
                            <div class="d-flex justify-content-between pb-2">
                                <h2>$@Model.TotalRevenue</h2>
                            </div>
                        </div>
                        <canvas id="coin_sales1" height="100"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<br />
<div class="row">
    <div class="col-xl-12 col-lg-8">
        <div class="card">
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-center">
                    <h4 class="header-title mb-0">Overview</h4>
                </div>
                <div class="chart-container">  
                    <canvas id="RevenueChart" style="width:100%; height:500px"></canvas>  
                </div>
            </div>
        </div>
    </div>
</div>
<br />
<div class="row">
    <!-- Item Status area start -->
    <div class="col-lg-4">
        <div class="card">
            <div class="card-body">
                <h4 class="header-title">Item Status</h4>
                <div class="cripto-live mt-5">
                    <ul>
                        <li>
                            <div><i class="fa fa-check"></i>Approved:<span> @Model.CountApproved </span></div></li>
                        <li>
                            <div><i class="fa fa-send"></i> Submitted:<span>@Model.CountSubmitted</span></div></li>
                        <li>
                            <div><i class="fa fa-close"></i> Rejected:<span>@Model.CountRejected</span></div></li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
    <!-- Item Status area end -->
    <!-- Top Item area start -->
    <div class="col-lg-8 mt-sm-30 mt-xs-30">
        <div class="card">
            <div class="card-body">
                <div class="d-sm-flex justify-content-between align-items-center">
                    <h4 class="header-title">Top Common Items</h4>
                </div>
                <div class="trad-history mt-4">
                    <div class="tab-content" id="myTabContent">
                        <div class="tab-pane fade show active">
                            <div class="table-responsive">
                                <table class="table table-striped text-center">
                                    <thead>
                                        <tr>
                                            <th scope="col">Index</th>
                                            <th scope="col">Image</th>
                                            <th scope="col">Name</th>
                                            <th scope="col">Unit price</th>
                                            <th scope="col">Amount</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @for(var i= 0 ;i < 5; ++i)
                                        {
                                            var item = Model.CommonItems[i];
                                            <tr>
                                                <td>@(i+1)</td>
                                                @{string PictureURLPath = @Url.Content("~/img/product/"+@item.PictureURL);}
                                                <td><img class="img_aspect" src="@PictureURLPath" asp-append-version="true" /></td>
                                                <td>@item.ItemName</td>
                                                <td>@item.UnitPrice</td>
                                                <td>@item.Total</td>
                                            </tr>
                                        }   
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Top Item  area end -->
</div>
<br />

<script type="text/javascript">  
$(document).ready(function(){
    $(function () {  
        var xLabels = JSON.parse('@Html.Raw(XLabels)');
        var yValues = JSON.parse('@Html.Raw(YValues)');
        var chartName = "RevenueChart";  
        var ctx = document.getElementById(chartName).getContext('2d');  
        var data = {  
            labels: xLabels,  
            datasets: [{  
                label: "Revenue Last 12 Months Chart",  
                backgroundColor: [  
                    'rgba(255, 99, 132, 0.2)',  
                    'rgba(54, 162, 235, 0.2)',  
                    'rgba(255, 206, 86, 0.2)',  
                    'rgba(75, 192, 192, 0.2)',  
                    'rgba(153, 102, 255, 0.2)',  
                    'rgba(255, 159, 64, 0.2)',  
                    'rgba(255, 0, 0)',  
                    'rgba(0, 255, 0)',  
                    'rgba(0, 0, 255)',  
                    'rgba(192, 192, 192)',  
                    'rgba(255, 255, 0)',  
                    'rgba(255, 0, 255)'  
                ],  
                borderColor: [  
                    'rgba(255,99,132,1)',  
                    'rgba(54, 162, 235, 1)',  
                    'rgba(255, 206, 86, 1)',  
                    'rgba(75, 192, 192, 1)',  
                    'rgba(153, 102, 255, 1)',  
                    'rgba(255, 159, 64, 1)',  
                    'rgba(255, 0, 0)',  
                    'rgba(0, 255, 0)',  
                    'rgba(0, 0, 255)',  
                    'rgba(192, 192, 192)',  
                    'rgba(255, 255, 0)',  
                    'rgba(255, 0, 255)'  
                ],  
                borderWidth: 1,  
                data: yValues 
            }]  
        };  
        var options = {  
            maintainAspectRatio: false,  
            scales: {  
                yAxes: [{  
                    ticks: {  
                        min: 0,  
                        beginAtZero: true  
                    },  
                    gridLines: {  
                        display: true,  
                        color: "rgba(255,99,164,0.2)"  
                    }  
                }],  
                xAxes: [{  
                    ticks: {  
                        min: 0,  
                        beginAtZero: true  
                    },  
                    gridLines: {  
                        display: false  
                    }  
                }]  
            }  
        };  
    
        var myChart = new  Chart(ctx, {  
            options: options,  
            data: data,  
            type:'line'  
        });  
    });  
});
</script>