@using MvcClient.Services
@inject IIdentityService<Buyer> identityService
@if (User.Identity.IsAuthenticated)
{
    <li> 
        <a href="#">Hello @User.Identity.Name</a>                   

        @* <a  class="nav-link text-dark dropdown-toggle" href="#" id="navbarDropdownMenuLink"
            data-toggle="dropdown" aria-haspopup="true" arai-expanded="false">
            
        </a> *@
        @if(User.IsInRole("Sales") || User.IsInRole("Managers") || User.IsInRole("Administrators"))
        {
            <ul class="header__menu__dropdown"> 
                @if( User.IsInRole("Sales") ){
                    <li><a asp-action="Index" asp-controller="Item" class="dropdown-item">Management</a></li>
                }else{
                    <li><a asp-action="Index" asp-controller="Admin" class="dropdown-item">Management</a></li>
                } 
                <li><a asp-action="Logout" asp-controller="Account" class="dropdown-item">Logout</a></li>
            </ul>
        }
        else{
            <ul class="header__menu__dropdown">
                <li><a class="dropdown-item">Account</a></li>
                <li><a class="dropdown-item">Profiles</a></li>
                <li><a asp-action="Index" asp-controller="Order" class="dropdown-item">Orders</a></li>
                <li><a asp-action="Logout" asp-controller="Account" class="dropdown-item">Logout</a></li>
            </ul>
        }
        @* <div class="dropdown-menu" aria-labelledby="navbarDropdownMenuLink">
        </div> *@
    </li>
        var check = Url.Action();
    
    @if(check != "/Cart" && check != "/Order/Create"){
        @await Component.InvokeAsync("Basket", new { user = identityService.Get(User) })
    }
} 
else 
{
    <div class="header__top__right__auth">
        <a class="nav-link text-dark" asp-action="Privacy" asp-controller="Home">
            <i class="fa fa-user"></i>
            <span style="font-weight: 600; font-size: 14px;">
                Login
            </span>
        </a>
    </div>
}
